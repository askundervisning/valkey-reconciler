# 1. Define the Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: valkey-reconciler-sa # Choose a descriptive name
  namespace: default # Or the namespace your app will run in
---
# 2. Define the Role with necessary permissions
# This Role grants permissions within the 'default' namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: valkey-reconciler-role # Choose a descriptive name
  namespace: default # Must match the Service Account's namespace
rules:
- apiGroups: [ "" ] # "" indicates the core API group (Pods, Services, etc.)
  resources: [ "pods", "services", "endpoints" ]
  verbs: [ "list", "patch", "update" ] # Grant list and patch permissions on pods
---
# 3. Bind the Service Account to the Role
# This grants the 'valkey-reconciler-sa' in 'default' the permissions defined in 'valkey-reconciler-role' in 'default'
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: valkey-reconciler-binding # Choose a descriptive name
  namespace: default # Must match the Role and Service Account's namespace
subjects:
- kind: ServiceAccount
  name: valkey-reconciler-sa # Must match the Service Account name
  namespace: default # Must match the Service Account namespace
roleRef:
  kind: Role # Must match the Role kind
  name: valkey-reconciler-role # Must match the Role name
  apiGroup: rbac.authorization.k8s.io
